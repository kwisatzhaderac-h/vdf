format = """
$username\
$hostname\
$directory\
$git_branch\
$git_status\
$git_metrics\
$python\
$c\
$scala\
$terraform\
$jobs\
$fill\
$aws\
$cmd_duration $time\
$line_break\
$character"""

# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Inserts a blank line between shell prompts
add_newline = true
# Timeout for commands executed by Starship (in ms)
# Might decrease as this slows things down a lot...
command_timeout = 1500

[fill]
symbol = " "

# Replace the "❯" symbol in the prompt with "➜"
[character] 
success_symbol            = "[➜](bold green)"
error_symbol              = "[➜](bold red)" 
vimcmd_symbol             = "[➜ ](bold green)"
vimcmd_replace_one_symbol = "[➜ ](bold purple)"
vimcmd_replace_symbol     = "[➜ ](bold purple)"
vimcmd_visual_symbol      = "[➜ ](bold yellow)"

[aws]
format = 'aws [$symbol($profile )(\($region\) )]($style)'
symbol = "  "
style = "bold yellow"

[aws.region_aliases]
ap-southeast-2 = "au"

[c]
format = "using [$symbol ($version(-$name) )]($style)"
symbol = "C++"
detect_extensions = ["c", "cpp", "h"]
commands = [["g++", "--version"]]

[directory]
format = "[$path]($style)[$read_only]($read_only_style) "
read_only = " "
read_only_style = "red"
home_symbol = "~"
style = "bold cyan"

[docker_context]
symbol = " "

[git_branch]
format = "on [$symbol$branch(:$remote_branch)]($style) "
symbol = " "
style = "bold purple"

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
ahead = "⇡${count}"
diverged = "⇕⇡${ahead_count}⇣${behind_count}"
behind = "⇣${count}"

[git_metrics]
format = "${all_status}"

[golang]
symbol = " "

[hg_branch]
symbol = " "

[memory_usage]
symbol = " "

[nodejs]
symbol = " "

[package]
symbol = " "

[python]
format = 'using [${symbol} ${version}${pyenv_prefix} (\($virtualenv\) )]($style)'
symbol = " "
version_format = "v${raw}"
python_binary = ["python", "python3"]
pyenv_prefix = "venv"

[scala]
format = 'via [${symbol}(${version} )]($style)'
version_format = "v${raw}"
detect_extensions = ['sbt', 'scala']
detect_files = ['.scalaenv', '.sbtenv', 'build.sbt']
detect_folders = ['.metals']
symbol = " "
style = "red dimmed"

[terraform]
format = "[using ${symbol}(${version} ) on $workspace]($style)"
symbol = "󱁢 "
version_format = "v${raw}"
style = "105"

